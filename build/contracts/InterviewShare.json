{
  "contractName": "InterviewShare",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_studentRegistry",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sharer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "companyName",
          "type": "string"
        }
      ],
      "name": "InterviewShared",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "companyInterviews",
      "outputs": [
        {
          "internalType": "string",
          "name": "companyName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "position",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "sharedBy",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "studentRegistry",
      "outputs": [
        {
          "internalType": "contract IStudentRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_companyName",
          "type": "string"
        },
        {
          "internalType": "string[]",
          "name": "_questions",
          "type": "string[]"
        },
        {
          "internalType": "string",
          "name": "_position",
          "type": "string"
        }
      ],
      "name": "shareInterview",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_studentRegistry\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sharer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"companyName\",\"type\":\"string\"}],\"name\":\"InterviewShared\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"companyInterviews\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"companyName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"position\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sharedBy\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_companyName\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"_questions\",\"type\":\"string[]\"},{\"internalType\":\"string\",\"name\":\"_position\",\"type\":\"string\"}],\"name\":\"shareInterview\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"studentRegistry\",\"outputs\":[{\"internalType\":\"contract IStudentRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/InterviewShare.sol\":\"InterviewShare\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"project:/contracts/IStudentRegistry.sol\":{\"keccak256\":\"0x89e09f94439c71ee32286e0b69dae389418d5700410a78884325774166584bfa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38c96163b3fbb6ab7c2ce49827a33f902886067d74175c42d49fe82af69b96dd\",\"dweb:/ipfs/QmVkApYrxJfxu1NsbA5GVK2tsMdr1ncLiS1e1NZceKNZbY\"]},\"project:/contracts/InterviewShare.sol\":{\"keccak256\":\"0x371793e60a1ea8cd1187e8c2e89be1c22396b23f3baee5330c222d62595c9820\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://797d8c222a83a3683d15d921bb4a17ecf31ca385adac7a7f14e9a51a313b9479\",\"dweb:/ipfs/QmS2mhZK36UopHvSBretM5oF8gZVZ8fudBq5CKvpbJ5vYz\"]}},\"version\":1}",
  "bytecode": "0x60803461007457601f610b5438819003918201601f19168301916001600160401b038311848410176100795780849260209460405283398101031261007457516001600160a01b0381169081900361007457600080546001600160a01b031916919091179055604051610ac490816100908239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe608080604052600436101561001357600080fd5b60003560e01c90816392c16fb51461087657508063e1ca42bd146101105763e9ffeaab1461004057600080fd5b3461010b57604036600319011261010b576004356001600160401b03811161010b576100709036906004016108d6565b61008c602060243592816040519382858094519384920161091d565b81016001815203019020805482101561010b576100ee916100ac91610940565b506100b6816109ac565b906100c3600282016109ac565b6100fc600383015492600460018060a01b039101541691604051958695608087526080870190610a52565b908582036020870152610a52565b91604084015260608301520390f35b600080fd5b3461010b57606036600319011261010b576004356001600160401b03811161010b576101409036906004016108d6565b602435906001600160401b03821161010b573660238301121561010b578160040135916001600160401b0383116104b3578260051b9060405193610187602084018661089a565b8452602460208501928201019036821161010b5760248101925b8284106108475785856044356001600160401b03811161010b576101c99036906004016108d6565b600080546040516312e0b2bb60e21b81523360048201529190829060249082906001600160a01b03165afa801561083b576000906107bb575b600491500361076257825115610712576040519260a084018481106001600160401b038211176104b35760405282845260208401526040830152426060830152336080830152604051602081835161025d818385880161091d565b810160018152030190208054600160401b8110156104b35761028491600182018155610940565b9190916106fc5782519283516001600160401b0381116104b3576102a88454610972565b601f81116106ca575b506020601f8211600114610661578192939495600092610656575b50508160011b916000199060031b1c19161783555b6020810151805190600160401b82116104b35760018501548260018701558083106105de575b5060200190600185016000526020600020916000905b8282106104c9575050505060408101519283516001600160401b0381116104b35761034b6002830154610972565b601f8111610473575b506020601f821160011461040057819060049495966000926103f5575b50508160011b916000199060031b1c19161760028201555b606083015160038201550190608060018060a01b03910151166bffffffffffffffffffffffff60a01b8254161790557f549731d9c7dbd9d14a37b75ae42807d2fe6da053f021ac7a754846d375f34dd460405160208152806103f033946020830190610a52565b0390a2005b015190508680610371565b6002830160005260206000209560005b601f198416811061045b57509582916004959697600194601f19811610610442575b505050811b016002820155610389565b015160001960f88460031b161c19169055868080610432565b82820151885560019097019660209283019201610410565b6104a390600284016000526020600020601f840160051c810191602085106104a9575b601f0160051c0190610a77565b85610354565b9091508190610496565b634e487b7160e01b600052604160045260246000fd5b80518051906001600160401b0382116104b3576104e68654610972565b601f81116105ac575b50602090601f831160011461053c579282600194936020938695600092610531575b5050600019600383901b1c191690841b1787555b0194019101909261031d565b015190508c80610511565b908660005260206000209160005b601f1985168110610594575083602093600196938796938794601f1981161061057b575b505050811b018755610525565b015160001960f88460031b161c191690558c808061056e565b9192602060018192868501518155019401920161054a565b6105d890876000526020600020601f850160051c810191602086106104a957601f0160051c0190610a77565b896104ef565b600186016000526020600020908382015b81830181106105ff575050610307565b8061060c60019254610972565b80610619575b50016105ef565b601f8111831461062f5750600081555b89610612565b60009082825261064d601f60208420920160051c8201858301610a77565b81835555610629565b0151905085806102cc565b8460005260206000209060005b601f19841681106106b2575060019394959683601f19811610610699575b505050811b0183556102e1565b015160001960f88460031b161c1916905585808061068c565b9091602060018192858b01518155019301910161066e565b6106f690856000526020600020601f840160051c810191602085106104a957601f0160051c0190610a77565b856102b1565b634e487b7160e01b600052600060045260246000fd5b60405162461bcd60e51b815260206004820152602260248201527f4d7573742070726f76696465206174206c65617374206f6e652071756573746960448201526137b760f11b6064820152608490fd5b60405162461bcd60e51b815260206004820152602b60248201527f4f6e6c792034746820796561722073747564656e74732063616e20736861726560448201526a20696e746572766965777360a81b6064820152608490fd5b503d806000833e6107cc818361089a565b81019060608183031261010b5780516001600160401b03811161010b5781019082601f8301121561010b57815192610803846108bb565b90610811604051928361089a565b8482526020858501011161010b576004936040936020806108349401910161091d565b0151610202565b6040513d6000823e3d90fd5b83356001600160401b03811161010b5760209161086b8392602436918701016108d6565b8152019301926101a1565b3461010b57600036600319011261010b576000546001600160a01b03168152602090f35b90601f801991011681019081106001600160401b038211176104b357604052565b6001600160401b0381116104b357601f01601f191660200190565b81601f8201121561010b578035906108ed826108bb565b926108fb604051948561089a565b8284526020838301011161010b57816000926020809301838601378301015290565b60005b8381106109305750506000910152565b8181015183820152602001610920565b805482101561095c576000526005602060002091020190600090565b634e487b7160e01b600052603260045260246000fd5b90600182811c921680156109a2575b602083101461098c57565b634e487b7160e01b600052602260045260246000fd5b91607f1691610981565b90604051918260008254926109c084610972565b908184526001948581169081600014610a2f57506001146109ec575b50506109ea9250038361089a565b565b9093915060005260209081600020936000915b818310610a175750506109ea935082010138806109dc565b855488840185015294850194879450918301916109ff565b9150506109ea94506020925060ff191682840152151560051b82010138806109dc565b90602091610a6b8151809281855285808601910161091d565b601f01601f1916010190565b818110610a82575050565b60008155600101610a7756fea26469706673582212205a68e7f17fe18c4b8e92f763f08ea5d50d4c0f1e9963cdaacc8da2cff869577664736f6c63430008130033",
  "deployedBytecode": "0x608080604052600436101561001357600080fd5b60003560e01c90816392c16fb51461087657508063e1ca42bd146101105763e9ffeaab1461004057600080fd5b3461010b57604036600319011261010b576004356001600160401b03811161010b576100709036906004016108d6565b61008c602060243592816040519382858094519384920161091d565b81016001815203019020805482101561010b576100ee916100ac91610940565b506100b6816109ac565b906100c3600282016109ac565b6100fc600383015492600460018060a01b039101541691604051958695608087526080870190610a52565b908582036020870152610a52565b91604084015260608301520390f35b600080fd5b3461010b57606036600319011261010b576004356001600160401b03811161010b576101409036906004016108d6565b602435906001600160401b03821161010b573660238301121561010b578160040135916001600160401b0383116104b3578260051b9060405193610187602084018661089a565b8452602460208501928201019036821161010b5760248101925b8284106108475785856044356001600160401b03811161010b576101c99036906004016108d6565b600080546040516312e0b2bb60e21b81523360048201529190829060249082906001600160a01b03165afa801561083b576000906107bb575b600491500361076257825115610712576040519260a084018481106001600160401b038211176104b35760405282845260208401526040830152426060830152336080830152604051602081835161025d818385880161091d565b810160018152030190208054600160401b8110156104b35761028491600182018155610940565b9190916106fc5782519283516001600160401b0381116104b3576102a88454610972565b601f81116106ca575b506020601f8211600114610661578192939495600092610656575b50508160011b916000199060031b1c19161783555b6020810151805190600160401b82116104b35760018501548260018701558083106105de575b5060200190600185016000526020600020916000905b8282106104c9575050505060408101519283516001600160401b0381116104b35761034b6002830154610972565b601f8111610473575b506020601f821160011461040057819060049495966000926103f5575b50508160011b916000199060031b1c19161760028201555b606083015160038201550190608060018060a01b03910151166bffffffffffffffffffffffff60a01b8254161790557f549731d9c7dbd9d14a37b75ae42807d2fe6da053f021ac7a754846d375f34dd460405160208152806103f033946020830190610a52565b0390a2005b015190508680610371565b6002830160005260206000209560005b601f198416811061045b57509582916004959697600194601f19811610610442575b505050811b016002820155610389565b015160001960f88460031b161c19169055868080610432565b82820151885560019097019660209283019201610410565b6104a390600284016000526020600020601f840160051c810191602085106104a9575b601f0160051c0190610a77565b85610354565b9091508190610496565b634e487b7160e01b600052604160045260246000fd5b80518051906001600160401b0382116104b3576104e68654610972565b601f81116105ac575b50602090601f831160011461053c579282600194936020938695600092610531575b5050600019600383901b1c191690841b1787555b0194019101909261031d565b015190508c80610511565b908660005260206000209160005b601f1985168110610594575083602093600196938796938794601f1981161061057b575b505050811b018755610525565b015160001960f88460031b161c191690558c808061056e565b9192602060018192868501518155019401920161054a565b6105d890876000526020600020601f850160051c810191602086106104a957601f0160051c0190610a77565b896104ef565b600186016000526020600020908382015b81830181106105ff575050610307565b8061060c60019254610972565b80610619575b50016105ef565b601f8111831461062f5750600081555b89610612565b60009082825261064d601f60208420920160051c8201858301610a77565b81835555610629565b0151905085806102cc565b8460005260206000209060005b601f19841681106106b2575060019394959683601f19811610610699575b505050811b0183556102e1565b015160001960f88460031b161c1916905585808061068c565b9091602060018192858b01518155019301910161066e565b6106f690856000526020600020601f840160051c810191602085106104a957601f0160051c0190610a77565b856102b1565b634e487b7160e01b600052600060045260246000fd5b60405162461bcd60e51b815260206004820152602260248201527f4d7573742070726f76696465206174206c65617374206f6e652071756573746960448201526137b760f11b6064820152608490fd5b60405162461bcd60e51b815260206004820152602b60248201527f4f6e6c792034746820796561722073747564656e74732063616e20736861726560448201526a20696e746572766965777360a81b6064820152608490fd5b503d806000833e6107cc818361089a565b81019060608183031261010b5780516001600160401b03811161010b5781019082601f8301121561010b57815192610803846108bb565b90610811604051928361089a565b8482526020858501011161010b576004936040936020806108349401910161091d565b0151610202565b6040513d6000823e3d90fd5b83356001600160401b03811161010b5760209161086b8392602436918701016108d6565b8152019301926101a1565b3461010b57600036600319011261010b576000546001600160a01b03168152602090f35b90601f801991011681019081106001600160401b038211176104b357604052565b6001600160401b0381116104b357601f01601f191660200190565b81601f8201121561010b578035906108ed826108bb565b926108fb604051948561089a565b8284526020838301011161010b57816000926020809301838601378301015290565b60005b8381106109305750506000910152565b8181015183820152602001610920565b805482101561095c576000526005602060002091020190600090565b634e487b7160e01b600052603260045260246000fd5b90600182811c921680156109a2575b602083101461098c57565b634e487b7160e01b600052602260045260246000fd5b91607f1691610981565b90604051918260008254926109c084610972565b908184526001948581169081600014610a2f57506001146109ec575b50506109ea9250038361089a565b565b9093915060005260209081600020936000915b818310610a175750506109ea935082010138806109dc565b855488840185015294850194879450918301916109ff565b9150506109ea94506020925060ff191682840152151560051b82010138806109dc565b90602091610a6b8151809281855285808601910161091d565b601f01601f1916010190565b818110610a82575050565b60008155600101610a7756fea26469706673582212205a68e7f17fe18c4b8e92f763f08ea5d50d4c0f1e9963cdaacc8da2cff869577664736f6c63430008130033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "97:1368:2:-:0;;;;;;;;;;;;;-1:-1:-1;;97:1368:2;;;;-1:-1:-1;;;;;97:1368:2;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;97:1368:2;;;;;;;;-1:-1:-1;97:1368:2;;-1:-1:-1;;;;;;97:1368:2;;;;;;;;;;;;;;;;;-1:-1:-1;97:1368:2;;;;;;-1:-1:-1;97:1368:2;;;;;-1:-1:-1;97:1368:2",
  "deployedSourceMap": "97:1368:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;97:1368:2;;;;;;-1:-1:-1;;;;;97:1368:2;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;356:55;;;;;97:1368;356:55;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;97:1368;;356:55;;97:1368;;;;;;;;356:55;;97:1368;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;356:55;97:1368;356:55;;97:1368;;;;;;-1:-1:-1;;97:1368:2;;;;;;-1:-1:-1;;;;;97:1368:2;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;97:1368:2;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;97:1368:2;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;97:1368:2;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;560:42:2;;591:10;97:1368;560:42;;97:1368;;;;;;;;;-1:-1:-1;;;;;97:1368:2;560:42;;;;;;97:1368;560:42;;;97:1368;;621:9;;;97:1368;;;;1011:21;97:1368;;;;;;;;;;;-1:-1:-1;;;;;97:1368:2;;;;;;;;;;;1121:208;;97:1368;;1121:208;;97:1368;1267:15;97:1368;1121:208;;97:1368;591:10;1121:208;;;97:1368;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;97:1368:2;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;97:1368:2;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1121:208;;97:1368;;;;-1:-1:-1;;;97:1368:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1121:208;;;;97:1368;1121:208;;97:1368;;;;-1:-1:-1;;;;;97:1368:2;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1121:208;;97:1368;;;;;;;1121:208;97:1368;;;;;1121:208;;97:1368;;;;;;;;;;;1413:41;97:1368;;;;;591:10;97:1368;591:10;97:1368;;;;;;:::i;:::-;1413:41;;;97:1368;;;;;-1:-1:-1;97:1368:2;;;;;;;;;;;;;;;;-1:-1:-1;;97:1368:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;97:1368:2;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;97:1368:2;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;97:1368:2;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;97:1368:2;;;;;;;;;;;;;;;-1:-1:-1;;97:1368:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;97:1368:2;;;;;;;;;;;;;;-1:-1:-1;;97:1368:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;97:1368:2;;;;;;;;;;;;;;;;;-1:-1:-1;;;97:1368:2;;;;;;;;;;-1:-1:-1;;;97:1368:2;;;;;;;;;;;;;;;;;-1:-1:-1;;;97:1368:2;;;;;;;560:42;;;;97:1368;560:42;;;;;;:::i;:::-;;;97:1368;;;;;;;;;;-1:-1:-1;;;;;97:1368:2;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;560:42;;;97:1368;;;;;;;;;;;;-1:-1:-1;;;;;97:1368:2;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;97:1368:2;;;;;;-1:-1:-1;;;;;97:1368:2;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;97:1368:2;;;;;;;:::o;:::-;-1:-1:-1;;;;;97:1368:2;;;;;;-1:-1:-1;;97:1368:2;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;97:1368:2;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;97:1368:2;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;97:1368:2;;;-1:-1:-1;97:1368:2;;;;;-1:-1:-1;97:1368:2;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;97:1368:2;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;-1:-1:-1;97:1368:2;;;;-1:-1:-1;97:1368:2;;-1:-1:-1;97:1368:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;97:1368:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;97:1368:2;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.19;\r\n\r\nimport \"./IStudentRegistry.sol\";\r\n\r\ncontract InterviewShare {\r\n    IStudentRegistry public studentRegistry;\r\n    \r\n    struct Interview {\r\n        string companyName;\r\n        string[] questions;\r\n        string position;\r\n        uint256 timestamp;\r\n        address sharedBy;\r\n    }\r\n    \r\n    mapping(string => Interview[]) public companyInterviews;\r\n    \r\n    event InterviewShared(address indexed sharer, string companyName);\r\n    \r\n    modifier onlyFourthYear() {\r\n        (, , uint256 year) = studentRegistry.getStudentInfo(msg.sender);\r\n        require(year == 4, \"Only 4th year students can share interviews\");\r\n        _;\r\n    }\r\n    \r\n    constructor(address _studentRegistry) {\r\n        studentRegistry = IStudentRegistry(_studentRegistry);\r\n    }\r\n    \r\n    function shareInterview(\r\n        string memory _companyName,\r\n        string[] memory _questions,\r\n        string memory _position\r\n    ) public onlyFourthYear {\r\n        require(_questions.length > 0, \"Must provide at least one question\");\r\n        \r\n        Interview memory interview = Interview({\r\n            companyName: _companyName,\r\n            questions: _questions,\r\n            position: _position,\r\n            timestamp: block.timestamp,\r\n            sharedBy: msg.sender\r\n        });\r\n        \r\n        companyInterviews[_companyName].push(interview);\r\n        emit InterviewShared(msg.sender, _companyName);\r\n    }\r\n}",
  "sourcePath": "C:\\Assignments\\CS4207\\CS4207-Blockbusters-FinalProject\\contracts\\InterviewShare.sol",
  "ast": {
    "absolutePath": "project:/contracts/InterviewShare.sol",
    "exportedSymbols": {
      "IStudentRegistry": [
        91
      ],
      "InterviewShare": [
        200
      ]
    },
    "id": 201,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 93,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:24:2"
      },
      {
        "absolutePath": "project:/contracts/IStudentRegistry.sol",
        "file": "./IStudentRegistry.sol",
        "id": 94,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 201,
        "sourceUnit": 92,
        "src": "61:32:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "InterviewShare",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 200,
        "linearizedBaseContracts": [
          200
        ],
        "name": "InterviewShare",
        "nameLocation": "106:14:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "92c16fb5",
            "id": 97,
            "mutability": "mutable",
            "name": "studentRegistry",
            "nameLocation": "152:15:2",
            "nodeType": "VariableDeclaration",
            "scope": 200,
            "src": "128:39:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IStudentRegistry_$91",
              "typeString": "contract IStudentRegistry"
            },
            "typeName": {
              "id": 96,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 95,
                "name": "IStudentRegistry",
                "nameLocations": [
                  "128:16:2"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 91,
                "src": "128:16:2"
              },
              "referencedDeclaration": 91,
              "src": "128:16:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IStudentRegistry_$91",
                "typeString": "contract IStudentRegistry"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "InterviewShare.Interview",
            "id": 109,
            "members": [
              {
                "constant": false,
                "id": 99,
                "mutability": "mutable",
                "name": "companyName",
                "nameLocation": "215:11:2",
                "nodeType": "VariableDeclaration",
                "scope": 109,
                "src": "208:18:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 98,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "208:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 102,
                "mutability": "mutable",
                "name": "questions",
                "nameLocation": "246:9:2",
                "nodeType": "VariableDeclaration",
                "scope": 109,
                "src": "237:18:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                  "typeString": "string[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 100,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "237:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "id": 101,
                  "nodeType": "ArrayTypeName",
                  "src": "237:8:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                    "typeString": "string[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 104,
                "mutability": "mutable",
                "name": "position",
                "nameLocation": "273:8:2",
                "nodeType": "VariableDeclaration",
                "scope": 109,
                "src": "266:15:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 103,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "266:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 106,
                "mutability": "mutable",
                "name": "timestamp",
                "nameLocation": "300:9:2",
                "nodeType": "VariableDeclaration",
                "scope": 109,
                "src": "292:17:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 105,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "292:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 108,
                "mutability": "mutable",
                "name": "sharedBy",
                "nameLocation": "328:8:2",
                "nodeType": "VariableDeclaration",
                "scope": 109,
                "src": "320:16:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 107,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "320:7:2",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Interview",
            "nameLocation": "187:9:2",
            "nodeType": "StructDefinition",
            "scope": 200,
            "src": "180:164:2",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "e9ffeaab",
            "id": 115,
            "mutability": "mutable",
            "name": "companyInterviews",
            "nameLocation": "394:17:2",
            "nodeType": "VariableDeclaration",
            "scope": 200,
            "src": "356:55:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_struct$_Interview_$109_storage_$dyn_storage_$",
              "typeString": "mapping(string => struct InterviewShare.Interview[])"
            },
            "typeName": {
              "id": 114,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 110,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "364:6:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "356:30:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_struct$_Interview_$109_storage_$dyn_storage_$",
                "typeString": "mapping(string => struct InterviewShare.Interview[])"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "baseType": {
                  "id": 112,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 111,
                    "name": "Interview",
                    "nameLocations": [
                      "374:9:2"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 109,
                    "src": "374:9:2"
                  },
                  "referencedDeclaration": 109,
                  "src": "374:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Interview_$109_storage_ptr",
                    "typeString": "struct InterviewShare.Interview"
                  }
                },
                "id": 113,
                "nodeType": "ArrayTypeName",
                "src": "374:11:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_Interview_$109_storage_$dyn_storage_ptr",
                  "typeString": "struct InterviewShare.Interview[]"
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "549731d9c7dbd9d14a37b75ae42807d2fe6da053f021ac7a754846d375f34dd4",
            "id": 121,
            "name": "InterviewShared",
            "nameLocation": "430:15:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 120,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 117,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sharer",
                  "nameLocation": "462:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 121,
                  "src": "446:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 116,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "446:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 119,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "companyName",
                  "nameLocation": "477:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 121,
                  "src": "470:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 118,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "470:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "445:44:2"
            },
            "src": "424:66:2"
          },
          {
            "body": {
              "id": 139,
              "nodeType": "Block",
              "src": "528:170:2",
              "statements": [
                {
                  "assignments": [
                    null,
                    null,
                    124
                  ],
                  "declarations": [
                    null,
                    null,
                    {
                      "constant": false,
                      "id": 124,
                      "mutability": "mutable",
                      "name": "year",
                      "nameLocation": "552:4:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 139,
                      "src": "544:12:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 123,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "544:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 130,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 127,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "591:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "595:6:2",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "591:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 125,
                        "name": "studentRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97,
                        "src": "560:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStudentRegistry_$91",
                          "typeString": "contract IStudentRegistry"
                        }
                      },
                      "id": 126,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "576:14:2",
                      "memberName": "getStudentInfo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 90,
                      "src": "560:30:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address) view external returns (string memory,uint256,uint256)"
                      }
                    },
                    "id": 129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "560:42:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(string memory,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "539:63:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 132,
                          "name": "year",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 124,
                          "src": "621:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "34",
                          "id": 133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "629:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        },
                        "src": "621:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c792034746820796561722073747564656e74732063616e20736861726520696e7465727669657773",
                        "id": 135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "632:45:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0014d65ad75504afc6321271f612d6e372bed37a6b2593d37e853081fb874fb1",
                          "typeString": "literal_string \"Only 4th year students can share interviews\""
                        },
                        "value": "Only 4th year students can share interviews"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0014d65ad75504afc6321271f612d6e372bed37a6b2593d37e853081fb874fb1",
                          "typeString": "literal_string \"Only 4th year students can share interviews\""
                        }
                      ],
                      "id": 131,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "613:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "613:65:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 137,
                  "nodeType": "ExpressionStatement",
                  "src": "613:65:2"
                },
                {
                  "id": 138,
                  "nodeType": "PlaceholderStatement",
                  "src": "689:1:2"
                }
              ]
            },
            "id": 140,
            "name": "onlyFourthYear",
            "nameLocation": "511:14:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 122,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "525:2:2"
            },
            "src": "502:196:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 151,
              "nodeType": "Block",
              "src": "748:71:2",
              "statements": [
                {
                  "expression": {
                    "id": 149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 145,
                      "name": "studentRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 97,
                      "src": "759:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStudentRegistry_$91",
                        "typeString": "contract IStudentRegistry"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 147,
                          "name": "_studentRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 142,
                          "src": "794:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 146,
                        "name": "IStudentRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91,
                        "src": "777:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IStudentRegistry_$91_$",
                          "typeString": "type(contract IStudentRegistry)"
                        }
                      },
                      "id": 148,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "777:34:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStudentRegistry_$91",
                        "typeString": "contract IStudentRegistry"
                      }
                    },
                    "src": "759:52:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStudentRegistry_$91",
                      "typeString": "contract IStudentRegistry"
                    }
                  },
                  "id": 150,
                  "nodeType": "ExpressionStatement",
                  "src": "759:52:2"
                }
              ]
            },
            "id": 152,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 143,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 142,
                  "mutability": "mutable",
                  "name": "_studentRegistry",
                  "nameLocation": "730:16:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 152,
                  "src": "722:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 141,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "722:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "721:26:2"
            },
            "returnParameters": {
              "id": 144,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "748:0:2"
            },
            "scope": 200,
            "src": "710:109:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 198,
              "nodeType": "Block",
              "src": "992:470:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 168,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 165,
                            "name": "_questions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 157,
                            "src": "1011:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                              "typeString": "string memory[] memory"
                            }
                          },
                          "id": 166,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1022:6:2",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "1011:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 167,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1031:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1011:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d7573742070726f76696465206174206c65617374206f6e65207175657374696f6e",
                        "id": 169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1034:36:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5cfb7e4c6691d56dd59f912a966b0cd0c594b440cd7e0fbe47a7fa2975ab1a80",
                          "typeString": "literal_string \"Must provide at least one question\""
                        },
                        "value": "Must provide at least one question"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5cfb7e4c6691d56dd59f912a966b0cd0c594b440cd7e0fbe47a7fa2975ab1a80",
                          "typeString": "literal_string \"Must provide at least one question\""
                        }
                      ],
                      "id": 164,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1003:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1003:68:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 171,
                  "nodeType": "ExpressionStatement",
                  "src": "1003:68:2"
                },
                {
                  "assignments": [
                    174
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 174,
                      "mutability": "mutable",
                      "name": "interview",
                      "nameLocation": "1109:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 198,
                      "src": "1092:26:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Interview_$109_memory_ptr",
                        "typeString": "struct InterviewShare.Interview"
                      },
                      "typeName": {
                        "id": 173,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 172,
                          "name": "Interview",
                          "nameLocations": [
                            "1092:9:2"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 109,
                          "src": "1092:9:2"
                        },
                        "referencedDeclaration": 109,
                        "src": "1092:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Interview_$109_storage_ptr",
                          "typeString": "struct InterviewShare.Interview"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 184,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 176,
                        "name": "_companyName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 154,
                        "src": "1159:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 177,
                        "name": "_questions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 157,
                        "src": "1197:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      {
                        "id": 178,
                        "name": "_position",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 159,
                        "src": "1232:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 179,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "1267:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1273:9:2",
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "1267:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 181,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1307:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1311:6:2",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1307:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 175,
                      "name": "Interview",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 109,
                      "src": "1121:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Interview_$109_storage_ptr_$",
                        "typeString": "type(struct InterviewShare.Interview storage pointer)"
                      }
                    },
                    "id": 183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "1146:11:2",
                      "1186:9:2",
                      "1222:8:2",
                      "1256:9:2",
                      "1297:8:2"
                    ],
                    "names": [
                      "companyName",
                      "questions",
                      "position",
                      "timestamp",
                      "sharedBy"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "1121:208:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Interview_$109_memory_ptr",
                      "typeString": "struct InterviewShare.Interview memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1092:237:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 189,
                        "name": "interview",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 174,
                        "src": "1387:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Interview_$109_memory_ptr",
                          "typeString": "struct InterviewShare.Interview memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Interview_$109_memory_ptr",
                          "typeString": "struct InterviewShare.Interview memory"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 185,
                          "name": "companyInterviews",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 115,
                          "src": "1350:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_struct$_Interview_$109_storage_$dyn_storage_$",
                            "typeString": "mapping(string memory => struct InterviewShare.Interview storage ref[] storage ref)"
                          }
                        },
                        "id": 187,
                        "indexExpression": {
                          "id": 186,
                          "name": "_companyName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 154,
                          "src": "1368:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1350:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Interview_$109_storage_$dyn_storage",
                          "typeString": "struct InterviewShare.Interview storage ref[] storage ref"
                        }
                      },
                      "id": 188,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1382:4:2",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1350:36:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Interview_$109_storage_$dyn_storage_ptr_$_t_struct$_Interview_$109_storage_$returns$__$attached_to$_t_array$_t_struct$_Interview_$109_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct InterviewShare.Interview storage ref[] storage pointer,struct InterviewShare.Interview storage ref)"
                      }
                    },
                    "id": 190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1350:47:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 191,
                  "nodeType": "ExpressionStatement",
                  "src": "1350:47:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 193,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1429:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1433:6:2",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1429:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 195,
                        "name": "_companyName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 154,
                        "src": "1441:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 192,
                      "name": "InterviewShared",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 121,
                      "src": "1413:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory)"
                      }
                    },
                    "id": 196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1413:41:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 197,
                  "nodeType": "EmitStatement",
                  "src": "1408:46:2"
                }
              ]
            },
            "functionSelector": "e1ca42bd",
            "id": 199,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 162,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 161,
                  "name": "onlyFourthYear",
                  "nameLocations": [
                    "977:14:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 140,
                  "src": "977:14:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "977:14:2"
              }
            ],
            "name": "shareInterview",
            "nameLocation": "840:14:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 160,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 154,
                  "mutability": "mutable",
                  "name": "_companyName",
                  "nameLocation": "879:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 199,
                  "src": "865:26:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 153,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "865:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 157,
                  "mutability": "mutable",
                  "name": "_questions",
                  "nameLocation": "918:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 199,
                  "src": "902:26:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 155,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "902:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 156,
                    "nodeType": "ArrayTypeName",
                    "src": "902:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 159,
                  "mutability": "mutable",
                  "name": "_position",
                  "nameLocation": "953:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 199,
                  "src": "939:23:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 158,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "939:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "854:115:2"
            },
            "returnParameters": {
              "id": 163,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "992:0:2"
            },
            "scope": 200,
            "src": "831:631:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 201,
        "src": "97:1368:2",
        "usedErrors": []
      }
    ],
    "src": "33:1432:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.19+commit.7dd6d404.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x3366084ED3e7AE27AEe838c3bF91Ca444Cf36BFe",
      "transactionHash": "0x8e0ee2a5513849a45b92c50b047b4fe86fa1dfd7828bb5350868ef5ff53f9f0b"
    }
  },
  "schemaVersion": "3.4.16",
  "updatedAt": "2024-12-08T08:58:42.416Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}